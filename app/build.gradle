apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'privacy-sentry-plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.yl.lib.privacysentry"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("../privacy")
            storePassword "123456"
            keyAlias "privacy"
            keyPassword "123456"
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.release //使用release签名
        }
        release {
            debuggable true
            jniDebuggable false
            shrinkResources false
            minifyEnabled true
            signingConfig signingConfigs.release //使用release签
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "androidx.multidex:multidex:2.0.1"
    if (rootProject.ext.plugin_local_debug) {
        implementation project(":hook-sentry")
        implementation project(":privacy-proxy")
        implementation project(":privacy-replace")
        implementation project(":privacy-annotation")
        implementation project(":privacy-ui")
    } else {
        implementation "com.wdian.android.lib:privacy-hook:${rootProject.ext.privacy_version}"
        implementation "com.wdian.android.lib:privacy-annotation:${rootProject.ext.privacy_version}"
        implementation "com.wdian.android.lib:privacy-proxy:${rootProject.ext.privacy_version}"
        implementation "com.wdian.android.lib:privacy-ui:${rootProject.ext.privacy_version}"
    }
    implementation(project(path: ':privacy-test')) {
        exclude module: 'privacy-annotation'
    }
    implementation "androidx.exifinterface:exifinterface:1.1.0"
    implementation "androidx.work:work-runtime-ktx:2.0.1"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    // 测试SHA-256 digest error问题
//    api "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}


privacy {
    // 设置免hook的名单
    blackList = []
    hookReflex = true
    hookConstructor = true
    hookField = true

    // hook Service的部分代码，修复在MIUI上的自启动问题
    // 部分Service把自己的Priority设置为1000，这里开启代理功能，可以代理成0
    enableReplacePriority = true
    replacePriority = 1

    // 支持关闭Service的Export功能，默认为false，注意部分厂商通道之类的push，不能关闭
    enableCloseServiceExport = true
    // Export白名单Service
    serviceExportPkgWhiteList = ["white"]
}
